spring.application.name = gateway
server.port = 8765

# Enviroment Value
token.secret = jxgEQeXHuPq8VdbyYFNkANdudQ53YUn4


# Eureka Discovery
eureka.instance.hostname=localhost
#spring.cloud.client.hostname=localhost
eureka.client.service-url.default-zone = http://localhost:8761/eureka


# Routing microservices
#spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lowerCaseServiceId=true

#CORS
spring.cloud.gateway.default-filters = DedupeResponseHeader=Vary Access-Control-Allow-Credentials Access-Control-Allow-Origin RETAIN_FIRST
spring.cloud.gateway.globalcors.add-to-simple-url-handler-mapping = true
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:4200
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true

spring.cloud.gateway.routes[0].id = filetrans
spring.cloud.gateway.routes[0].uri = lb://credit-card-service
spring.cloud.gateway.routes[0].predicates[0] = Path=/filetrans/**
spring.cloud.gateway.routes[0].predicates[1] = Method=GET,POST,OPTIONS
spring.cloud.gateway.routes[0].predicates[2]= Header=Authorization, (.*)
spring.cloud.gateway.routes[0].filters[0] = AuthorizationHeaderFilter
spring.cloud.gateway.routes[0].filters[1] = RewritePath=/credit-card-service/(?<segment>.*), /${segment}
#spring.cloud.gateway.routes[0].filters[2] = RemoveRequestHeader=Cookie

spring.cloud.gateway.routes[1].id = user-register
spring.cloud.gateway.routes[1].uri = lb://user-service
spring.cloud.gateway.routes[1].predicates[0] = Path=/registration/**, /registration
spring.cloud.gateway.routes[1].predicates[1] = Method=GET,POST
#spring.cloud.gateway.routes[1].filters[0] = RemoveRequestHeader=Cookie
#spring.cloud.gateway.routes[1].filters[0] = RewritePath=/user-service/(?<segment>.*), /${segment}

spring.cloud.gateway.routes[2].id = user-login
spring.cloud.gateway.routes[2].uri = lb://user-service
spring.cloud.gateway.routes[2].predicates[0] = Path=/login/**
spring.cloud.gateway.routes[2].predicates[1] = Method=GET,POST
#spring.cloud.gateway.routes[2].filters[0] = RemoveRequestHeader=Cookie
#spring.cloud.gateway.routes[2].filters[1] = RewritePath=/user-service/(?<segment>.*), /${segment}

spring.cloud.gateway.routes[3].id = user-details
spring.cloud.gateway.routes[3].uri = lb://user-service
spring.cloud.gateway.routes[3].predicates[0] = Path=/userinfo
spring.cloud.gateway.routes[3].predicates[1] = Method=GET
spring.cloud.gateway.routes[3].predicates[2]= Header=Authorization, (.*)
spring.cloud.gateway.routes[3].filters[0] = AuthorizationHeaderFilter


# Logging
logging.file.name = activity.log
logging.level.root = INFO

# Spring MVC found on classpath, which is incompatible with Spring Cloud Gateway.
spring.main.web-application-type=reactive


# DB
spring.datasource.url = jdbc:mysql://localhost:3306/training
spring.datasource.username=root
spring.datasource.password=password

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect